{"version":3,"file":"static/js/186.c767927e.chunk.js","mappings":"8TAAMA,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIC,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,sGACkBC,MACrB,+DACAN,GAHG,cACCO,EADD,gBAKmBA,EAASC,OAL5B,cAKCC,EALD,yBAMEA,GANF,kEASA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,yFACkBL,MAAM,mDAAD,OACyBK,EADzB,8CAE1BX,GAHG,cACCO,EADD,gBAKmBA,EAASC,OAL5B,cAKCC,EALD,yBAMEA,GANF,kEASA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,yFACkBP,MAAM,sCAAD,OACYO,EADZ,mBAE1Bb,GAHG,cACCO,EADD,gBAKkBA,EAASC,OAL3B,cAKCM,EALD,yBAMEA,GANF,kEASA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCF,GAAjC,yFACkBP,MAAM,sCAAD,OACYO,EADZ,2BAE1Bb,GAHG,cACCO,EADD,gBAKkBA,EAASC,OAL3B,cAKCM,EALD,yBAMEA,GANF,kEASA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAAiCH,GAAjC,yFACkBP,MAAM,sCAAD,OACYO,EADZ,2BAE1Bb,GAHG,cACCO,EADD,gBAKkBA,EAASC,OAL3B,cAKCM,EALD,yBAMEA,GANF,kEASA,IAAMG,EAAW,SAACC,EAAKC,GAAN,OACtBD,EAAG,sCACgCC,EAAKC,YADrC,OACkDF,GADlD,yEADmB,C,yGCZxB,UAtCgB,WACd,IAAQG,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE8BV,EAAAA,EAAAA,IAAkBK,GAFhD,OAEUM,EAFV,OAGIF,EAAWE,EAAYC,SAH3B,gDAKIC,QAAQC,IAAI,KAAMC,SALtB,0DADc,uBAAC,WAAD,wBASdC,EACD,GAAE,CAACX,KAGF,8BACE,wBACGG,EAAQS,OAAS,GAChB,yBACE,2DAFH,OAKCT,QALD,IAKCA,OALD,EAKCA,EAASU,KAAI,SAAAC,GACX,OACE,2BACE,qCAAaA,EAAOC,WACpB,uBAAID,EAAOE,YAFJF,EAAOtB,GAKnB,OAKV,C,sBCxCD,SAASyB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,EAEvC,CAEe,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GAEzB,SAASd,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOgB,GACdrB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,EACnE,CAEAjB,OAAMkB,EACR,GACF,CACF,C","sources":["api/apiService.js","components/Reviews/Reviews.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["const options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIyZTY1ZThjZmEzYTU5MTE3MTRlMTE2ZGZkNmVlNjIxNCIsInN1YiI6IjY1MzEwOGJiMTEwOGE4MDBhYzc1MzgyMyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.4Ls_rD1Q4gtKlbPSi-Ur5NHe_VHhKmw2WTzzKtH2Lzg',\n  },\n};\n\nexport async function fetchTrend() {\n  const response = await fetch(\n    'https://api.themoviedb.org/3/trending/all/day?language=en-US',\n    options\n  );\n  const dataFilms = await response.json();\n  return dataFilms;\n}\n\nexport async function fetchMovieByName(query) {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/search/movie?query=${query}&include_adult=false&language=en-US&page=1`,\n    options\n  );\n  const dataFilms = await response.json();\n  return dataFilms;\n}\n\nexport async function fetchMovieDetails(id) {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/movie/${id}?language=en-US`,\n    options\n  );\n  const dataFilm = await response.json();\n  return dataFilm;\n}\n\nexport async function fetchMovieCredits(id) {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/movie/${id}/credits?language=en-US`,\n    options\n  );\n  const dataFilm = await response.json();\n  return dataFilm;\n}\n\nexport async function fetchMovieReviews(id) {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?language=en-US`,\n    options\n  );\n  const dataFilm = await response.json();\n  return dataFilm;\n}\n\nexport const getImage = (url, size) =>\n  url\n    ? `https://image.tmdb.org/t/p/w${size.toString()}${url}`\n    : `https://placehold.jp/e6e7f4/242424/300x300.png?text=Image%20not%20found`;\n","import { fetchMovieReviews } from 'api/apiService';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    async function showReviews() {\n      try {\n        const reviewsData = await fetchMovieReviews(movieId);\n        setReviews(reviewsData.results);\n      } catch (error) {\n        console.log(error.message);\n      }\n    }\n    showReviews();\n  }, [movieId]);\n\n  return (\n    <section>\n      <ul>\n        {reviews.length < 1 ? (\n          <li>\n            <p>There were no reviews to find</p>\n          </li>\n        ) : (\n          reviews?.map(review => {\n            return (\n              <li key={review.id}>\n                <h3>Author: {review.author}</h3>\n                <p>{review.content}</p>\n              </li>\n            );\n          })\n        )}\n      </ul>\n    </section>\n  );\n};\n\nexport default Reviews;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["options","method","headers","accept","Authorization","fetchTrend","fetch","response","json","dataFilms","fetchMovieByName","query","fetchMovieDetails","id","dataFilm","fetchMovieCredits","fetchMovieReviews","getImage","url","size","toString","movieId","useParams","useState","reviews","setReviews","useEffect","reviewsData","results","console","log","message","showReviews","length","map","review","author","content","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}