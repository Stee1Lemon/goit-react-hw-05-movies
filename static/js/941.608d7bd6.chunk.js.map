{"version":3,"file":"static/js/941.608d7bd6.chunk.js","mappings":"8TAAMA,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIC,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,sGACkBC,MACrB,+DACAN,GAHG,cACCO,EADD,gBAKmBA,EAASC,OAL5B,cAKCC,EALD,yBAMEA,GANF,kEASA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,yFACkBL,MAAM,mDAAD,OACyBK,EADzB,8CAE1BX,GAHG,cACCO,EADD,gBAKmBA,EAASC,OAL5B,cAKCC,EALD,yBAMEA,GANF,kEASA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,yFACkBP,MAAM,sCAAD,OACYO,EADZ,mBAE1Bb,GAHG,cACCO,EADD,gBAKkBA,EAASC,OAL3B,cAKCM,EALD,yBAMEA,GANF,kEASA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCF,GAAjC,yFACkBP,MAAM,sCAAD,OACYO,EADZ,2BAE1Bb,GAHG,cACCO,EADD,gBAKkBA,EAASC,OAL3B,cAKCM,EALD,yBAMEA,GANF,kEASA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAAiCH,GAAjC,yFACkBP,MAAM,sCAAD,OACYO,EADZ,2BAE1Bb,GAHG,cACCO,EADD,gBAKkBA,EAASC,OAL3B,cAKCM,EALD,yBAMEA,GANF,kEASA,IAAMG,EAAW,SAACC,EAAKC,GAAN,OACtBD,EAAG,sCACgCC,EAAKC,YADrC,OACkDF,GADlD,yEADmB,C,iJCpDXG,E,OAAWC,GAAAA,GAAH,gF,SCsCrB,EAnCa,WACX,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE2Bb,EAAAA,EAAAA,IAAkBQ,GAF7C,OAEUM,EAFV,OAGIF,EAAQE,EAASH,MAHrB,gDAKII,QAAQC,IAAI,KAAMC,SALtB,0DADc,uBAAC,WAAD,wBASdC,EACD,GAAE,CAACV,KAGF,8BACE,+BACGG,QADH,IACGA,OADH,EACGA,EAAMQ,KAAI,SAAAC,GACT,OACE,UAACd,EAAD,YACE,gBAAKe,KAAKnB,EAAAA,EAAAA,IAASkB,EAAME,aAAc,KAAMC,IAAKH,EAAMI,QACxD,4BACE,uBAAIJ,EAAMI,QACV,uCAAeJ,EAAMK,UAArB,YAJWL,EAAMtB,GAQxB,OAIR,C,sBCtCD,SAAS4B,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,EAEvC,CAEe,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GAEzB,SAASd,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOgB,GACdrB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,EACnE,CAEAjB,OAAMkB,EACR,GACF,CACF,C","sources":["api/apiService.js","components/Cast/CastStyles.js","components/Cast/Cast.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["const options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIyZTY1ZThjZmEzYTU5MTE3MTRlMTE2ZGZkNmVlNjIxNCIsInN1YiI6IjY1MzEwOGJiMTEwOGE4MDBhYzc1MzgyMyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.4Ls_rD1Q4gtKlbPSi-Ur5NHe_VHhKmw2WTzzKtH2Lzg',\n  },\n};\n\nexport async function fetchTrend() {\n  const response = await fetch(\n    'https://api.themoviedb.org/3/trending/all/day?language=en-US',\n    options\n  );\n  const dataFilms = await response.json();\n  return dataFilms;\n}\n\nexport async function fetchMovieByName(query) {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/search/movie?query=${query}&include_adult=false&language=en-US&page=1`,\n    options\n  );\n  const dataFilms = await response.json();\n  return dataFilms;\n}\n\nexport async function fetchMovieDetails(id) {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/movie/${id}?language=en-US`,\n    options\n  );\n  const dataFilm = await response.json();\n  return dataFilm;\n}\n\nexport async function fetchMovieCredits(id) {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/movie/${id}/credits?language=en-US`,\n    options\n  );\n  const dataFilm = await response.json();\n  return dataFilm;\n}\n\nexport async function fetchMovieReviews(id) {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?language=en-US`,\n    options\n  );\n  const dataFilm = await response.json();\n  return dataFilm;\n}\n\nexport const getImage = (url, size) =>\n  url\n    ? `https://image.tmdb.org/t/p/w${size.toString()}${url}`\n    : `https://placehold.jp/e6e7f4/242424/300x300.png?text=Image%20not%20found`;\n","import styled from 'styled-components';\n\nexport const CastInfo = styled.li`\n  display: flex;\n  gap: 15px;\n  margin-bottom: 15px;\n`;\n","import { fetchMovieCredits, getImage } from 'api/apiService';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { CastInfo } from './CastStyles';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    async function showCast() {\n      try {\n        const castData = await fetchMovieCredits(movieId);\n        setCast(castData.cast);\n      } catch (error) {\n        console.log(error.message);\n      }\n    }\n    showCast();\n  }, [movieId]);\n\n  return (\n    <section>\n      <ul>\n        {cast?.map(actor => {\n          return (\n            <CastInfo key={actor.id}>\n              <img src={getImage(actor.profile_path, 185)} alt={actor.name} />\n              <div>\n                <p>{actor.name}</p>\n                <p>Character: {actor.character} </p>\n              </div>\n            </CastInfo>\n          );\n        })}\n      </ul>\n    </section>\n  );\n};\n\nexport default Cast;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["options","method","headers","accept","Authorization","fetchTrend","fetch","response","json","dataFilms","fetchMovieByName","query","fetchMovieDetails","id","dataFilm","fetchMovieCredits","fetchMovieReviews","getImage","url","size","toString","CastInfo","styled","movieId","useParams","useState","cast","setCast","useEffect","castData","console","log","message","showCast","map","actor","src","profile_path","alt","name","character","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}